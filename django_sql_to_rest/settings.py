"""
Django settings for django_sql_to_rest project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k+%hc4mptvm32ul#3jr)$b7)yy#hqc*&9hjn$4$%l@=7-q*$b2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ["localhost", ]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "django_mptt_admin",
    "corsheaders",
    "menus",
    "db_query",
    "services",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = 'django_sql_to_rest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CORS_ORIGIN_ALLOW_ALL = True
WSGI_APPLICATION = 'django_sql_to_rest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('API_DB_NAME'),
        'USER': os.getenv('API_DB_USER'),
        'PASSWORD': os.getenv('API_DB_PASS'),
        'HOST': os.getenv('API_DB_HOST'),
        'PORT': os.getenv('API_DB_PORT'),
    },
    'query_db': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('DATA_DB_NAME'),
        'USER': os.getenv('DATA_DB_USER'),
        'PASSWORD': os.getenv('DATA_DB_PASS'),
        'HOST': os.getenv('DATA_DB_HOST'),
        'PORT': os.getenv('DATA_DB_PORT'),
    },
    'reglass': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('REGLASS_DB_NAME'),
        'USER': os.getenv('REGLASS_DB_USER'),
        'PASSWORD': os.getenv('REGLASS_DB_PASS'),
        'HOST': os.getenv('REGLASS_DB_HOST'),
        'PORT': os.getenv('REGLASS_DB_PORT'),
    },
}

# to apply raw sql to specific connection
#
# from django.db import connections
# cursor = connections['minipcp'].cursor()
# cursor.execute(some_query)
# row = cursor.fetchone()

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

if os.getenv("DOCKERIZED") is None:
    try:
        from .local_settings import *  # noqa
    except ImportError:
        pass

